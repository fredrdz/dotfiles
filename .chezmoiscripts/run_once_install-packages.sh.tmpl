#!/bin/bash
# author: Fredy Rodriguez
# note: uses golang templates to generate bash script
# to see chezmoi vars
# use: chezmoi data

packages-dnf () {
  sudo dnf install -y util-linux-user zsh snapd cmake sshuttle tmux xclip xsel yp-tools \
    libgit2-devel libssh2-devel openssl-devel pkg-config g++ gcc \
    httpie htop neofetch wget ninja-build libtool openssh-server gh btop autossh \
    podman clang libevent-devel luarocks openssl net-tools jq go neovim \
    flatpak
  sudo dnf groupinstall -y 'Development Tools' 'Development Libraries'
  sudo dnf install -y 'dnf-command(copr)'
  sudo dnf copr enable atim/lazygit -y
  sudo dnf install -y lazygit
  sudo dnf module install -y nodejs:18/common
}

packages-snap () {
  sudo ln -s /var/lib/snapd/snap /snap
  sudo systemctl enable snapd --now
  # sudo snap install vlc bitwarden slack discord
  sudo snap install ripgrep --classic
  sudo snap install kubectl --classic
}

packages-node () {
  sudo npm install diff-so-fancy -g
	sudo npm install netlify-cli -g
  ntl completion:install
}

packages-golang () {
  go install -tags extended github.com/gohugoio/hugo@latest
  go install github.com/walles/moar@latest
  go install github.com/dundee/gdu/v5/cmd/gdu@latest
  go install sigs.k8s.io/kind@v0.17.0
  go install github.com/mikefarah/yq/v4@latest
  go install github.com/TheZoraiz/ascii-image-converter@latest
}

packages-rust () {
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
  ~/.cargo/bin/cargo install navi zoxide exa starship bat tree-sitter-cli bottom ripgrep
  ~/.cargo/bin/cargo install cargo-update
}

packages-flatpak () {
  flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
  flatpak install flathub org.wezfurlong.wezterm
}

settings-virtualization () {
  # virtualization
  #  sudo vi /etc/libvirt/libvirtd.conf
  #  unix_sock_group = "libvirt"
  #  unix_sock_rw_perms = "0770"
  sudo dnf install -y @virtualization
  sudo systemctl enable libvirtd
  sudo systemctl start libvirtd
  sudo usermod -a -G libvirt $(whoami)
}

settings-development () {
  # fzf
  ~/.fzf/install
  # chezmoi
  mkdir ~/.oh-my-zsh/completions/
  chezmoi completion zsh --output=~/.oh-my-zsh/completions/_chezmoi
  # wezterm
  tempfile=$(mktemp) \
  && curl -o $tempfile https://raw.githubusercontent.com/wez/wezterm/main/termwiz/data/wezterm.terminfo \
  && tic -x -o ~/.terminfo $tempfile \
  && rm $tempfile
  # xterm-256color-italic
  curl --silent \
    https://gist.githubusercontent.com/sadsfae/0b4dd18670639f7dce941a1b2a9e4e9e/raw/908b48e6b6370da0568be8d138966c60240a50dd/xterm-256color-italic.terminfo \
    > ~/Documents/xterm-256color-italic
  tic ~/Documents/xterm-256color-italic
  # nerd-fonts
  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/JetBrainsMono.zip -P ~/Documents/
  mkdir ~/.local/share/fonts
  unzip ~/Documents/JetBrainsMono.zip -d ~/.local/share/fonts/
  fc-cache ~/.local/share/fonts
  # diff-so-fancy
  git config --global core.pager "diff-so-fancy | less --tabs=4 -RFX"
  git config --global interactive.diffFilter "diff-so-fancy --patch"
  git config --global color.ui true
  git config --global color.diff-highlight.oldNormal    "red bold"
  git config --global color.diff-highlight.oldHighlight "red bold 52"
  git config --global color.diff-highlight.newNormal    "green bold"
  git config --global color.diff-highlight.newHighlight "green bold 22"
  git config --global color.diff.meta       "11"
  git config --global color.diff.frag       "magenta bold"
  git config --global color.diff.func       "146 bold"
  git config --global color.diff.commit     "yellow bold"
  git config --global color.diff.old        "red bold"
  git config --global color.diff.new        "green bold"
  git config --global color.diff.whitespace "red reverse"
}

packages-desktop () {
  # brave
  sudo dnf config-manager --add-repo https://brave-browser-rpm-release.s3.brave.com/x86_64/
  sudo rpm --import https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
  sudo dnf install -y brave-browser vlc mpv
  # ssh
  sudo systemctl enable sshd
  sudo systemctl start sshd
}

{{ if eq .osid "darwin" }}
echo "Detected MacOS"
echo "Do you want to continue with installs?(yes/no)"
read input
if [ "$input" == "yes" ]; then
  # shell
  chsh -s /usr/bin/zsh
  # rust
  packages-rust
  # golang
  packages-golang
  # node
  packages-node
  # env/dev settings
  settings-development
fi

{{ else if eq .osid "linux-fedora" }}
echo "Detected Fedora"
echo "Do you want to continue with installs?(yes/no)"
read input
if [ "$input" == "yes" ]; then
  # locale
  sudo dnf -y install glibc-common glibc-locale-source glibc-langpack-en
  sudo localedef --force -f UTF-8 -i en_US en_US.UTF-8
  # dnf
  packages-dnf
  # shell
  chsh -s /usr/bin/zsh
  # flatpak
  packages-flatpak
  # snap
  packages-snap
  # rust
  packages-rust
  # golang
  packages-golang
  # node
  packages-node
  # env/dev settings
  settings-development
fi

{{ else if eq .osid "linux-nobara" }}
echo "Detected Nobara"
echo "Do you want to continue with installs?(yes/no)"
read input
if [ "$input" == "yes" ]; then
  # dnf
  packages-dnf
  # shell
  chsh -s /usr/bin/zsh
  # flatpak
  packages-flatpak
  flatpak install flathub com.github.wwmm.easyeffects
  # snap
  packages-snap
  # rust
  packages-rust
  # golang
  packages-golang
  # node
  packages-node
  # env/dev settings
  settings-development
  # virtualization
  settings-virtualization
  # desktop
  packages-desktop
fi

{{ else if eq .osid "linux-ubuntu" }}
echo "Detected Ubuntu"
echo "Do you want to continue with installs?(yes/no)"
read input
if [ "$input" == "yes" ]; then
  # systemd
  sudo cat <<-EOT >> /etc/wsl.conf
  [boot]
  systemd=true
  EOT
	# apt
	sudo add-apt-repository ppa:aos1/diff-so-fancy
	sudo apt update
	sudo apt install zsh snapd cmake sshuttle tmux xclip xsel yp-tools pkg-config openssh-server libgit2-dev neofetch build-essential unzip diff-so-fancy
	# locale
	sudo locale-gen "en_US.UTF-8"
	sudo dpkg-reconfigure locales
	# ssh
	sudo sed -i -E 's,^#?Port.*$,Port 2022,' /etc/ssh/sshd_config
	sudo service ssh restart
	sudo sh -c "echo '${USER} ALL=(root) NOPASSWD: /usr/sbin/service ssh start' >/etc/sudoers.d/service-ssh-start"
	# rust
	curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
	~/.cargo/bin/cargo install navi zoxide exa starship bat --locked
	~/.cargo/bin/cargo install cargo-update
	# snap
	sudo systemctl enable snapd --now
	sudo snap install autossh httpie htop btop hugo gh
	sudo snap install node --classic
	sudo snap install go --classic
	sudo snap install nvim --classic
	sudo snap install ripgrep --classic
	# golang
	go install github.com/walles/moar@latest
	# fzf
	~/.fzf/install
	# node
	sudo npm install netlify-cli -g
	# xterm-256color-italic
	mkdir ~/frodriguez
	curl --silent \
	https://gist.githubusercontent.com/sadsfae/0b4dd18670639f7dce941a1b2a9e4e9e/raw/908b48e6b6370da0568be8d138966c60240a50dd/xterm-256color-italic.terminfo \
	> ~/frodriguez/xterm-256color-italic
	tic ~/frodriguez/xterm-256color-italic
	# nerd-fonts
	wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/JetBrainsMono.zip -P ~/frodriguez/
	mkdir ~/.local/share/fonts
	unzip ~/frodriguez/JetBrainsMono.zip -d ~/.local/share/fonts/
	fc-cache ~/.local/share/fonts
	# chezmoi
	mkdir ~/.oh-my-zsh/completions/
	chezmoi completion zsh --output=~/.oh-my-zsh/completions/_chezmoi
	# diff-so-fancy
	git config --global core.pager "diff-so-fancy | less --tabs=4 -RFX"
	git config --global interactive.diffFilter "diff-so-fancy --patch"
	git config --global color.ui true
	git config --global color.diff-highlight.oldNormal    "red bold"
	git config --global color.diff-highlight.oldHighlight "red bold 52"
	git config --global color.diff-highlight.newNormal    "green bold"
	git config --global color.diff-highlight.newHighlight "green bold 22"
	git config --global color.diff.meta       "11"
	git config --global color.diff.frag       "magenta bold"
	git config --global color.diff.func       "146 bold"
	git config --global color.diff.commit     "yellow bold"
	git config --global color.diff.old        "red bold"
	git config --global color.diff.new        "green bold"
	git config --global color.diff.whitespace "red reverse"
fi

{{ else if eq .osid "linux-garuda" }}
echo "Detected Garuda"
echo "Do you want to continue with installs?(yes/no)"
read input
if [ "$input" == "yes" ]; then
  sudo pacman -Syu go neovim tmux autossh sshuttle fzf fd xclip diff-so-fancy powerline code mosh nodejs git base-devel npm httpie python-pip jre-openjdk php composer julia jdk-openjdk starship bat exa neofetch cmake unzip ninja tree-sitter curl yay-git
  #git clone https://aur.archlinux.org/yay-git.git ~/git/yay-git
  #cd ~/git/yay-git
  #makepkg -si
  yay -Syu slack-desktop brave mongosh-bin openrazer-meta polychromatic input-remapper-git
  #installs rust
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
  cargo install navi --locked
fi

{{ else if eq .osid "linux-steamos" }}
echo "Detected Steam OS / Steam Deck"
echo "Do you want to continue with installs?(yes/no)"
read input
if [ "$input" == "yes" ]; then
  # STEAM DECK ONLY
  passwd
  sudo steamos-readonly disable
  sudo pacman-key --init
  sudo pacman-key --populate archlinux
  sudo pacman -Sy
  sudo steamos-readonly enable
fi
{{ end }}
