#!/bin/bash
# author: Fredy Rodriguez
# note: uses golang templates to generate bash script
# to see chezmoi vars
# use: chezmoi data

{{ if eq .osid "darwin" }}
echo "Detected MacOS"

{{ else if eq .osid "linux-debian" }}
echo "Detected Debian"

{{ else if eq .osid "linux-nobara" }}
echo "Detected Nobara"
echo "Do you want to continue with installs?(yes/no)"
read input
if [ "$input" == "yes" ]; then
  echo "Detected Fedora"
  # chezmoi
  # sh -c "$(curl -fsLS get.chezmoi.io)" -- -b $HOME/.local/bin init --apply fredrdz
  # dnf
  sudo dnf install util-linux-user zsh snapd cmake sshuttle tmux xclip xsel
  # snap
  sudo systemctl enable snapd --now
  sudo snap install vlc slack bitwarden brave autossh httpie htop hugo gh
  sudo snap install node --classic
  sudo snap install go --classic
  sudo snap install nvim --classic
  sudo snap install ripgrep --classic
  # rust
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
  ~/.cargo/bin/cargo install navi zoxide exa starship bat alacritty --locked
  sudo curl --silent \
    https://raw.githubusercontent.com/alacritty/alacritty/master/extra/logo/alacritty-term.svg \
    > /usr/share/pixmaps/Alacritty.svg
  sudo curl --silent \
    https://raw.githubusercontent.com/alacritty/alacritty/master/extra/linux/Alacritty.desktop \
    > ~/Documents/Alacritty.desktop
  sudo desktop-file-install ~/Documents/Alacritty.desktop
  sudo update-desktop-database
  # fzf
  ~/.fzf/install
  # node
  sudo npm install netlify-cli -g
  # xterm-256color-italic
  curl --silent \
    https://gist.githubusercontent.com/sadsfae/0b4dd18670639f7dce941a1b2a9e4e9e/raw/908b48e6b6370da0568be8d138966c60240a50dd/xterm-256color-italic.terminfo \
    > ~/Documents/xterm-256color-italic
  tic ~/Documents/xterm-256color-italic
  # nerd-fonts
  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/JetBrainsMono.zip -P ~/Documents/
  mkdir ~/.local/share/fonts
  unzip ~/Documents/JetBrainsMono.zip -d ~/.local/share/fonts/
  fc-cache ~/.local/share/fonts
  # shell
  chsh -s /usr/bin/zsh
fi

{{ else if eq .osid "linux-garuda" }}
echo "Detected Garuda"
echo "Do you want to continue with installs?(yes/no)"
read input
if [ "$input" == "yes" ]; then
  sudo pacman -Syu go neovim tmux autossh sshuttle fzf fd xclip diff-so-fancy powerline code mosh nodejs git base-devel npm httpie python-pip jre-openjdk php composer julia jdk-openjdk starship bat exa neofetch cmake unzip ninja tree-sitter curl yay-git

  #git clone https://aur.archlinux.org/yay-git.git ~/git/yay-git
  #cd ~/git/yay-git
  #makepkg -si
  yay -Syu slack-desktop brave mongosh-bin openrazer-meta polychromatic input-remapper-git

  #installs rust
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

  cargo install navi --locked
fi

{{ else if eq .osid "linux-steamos" }}
echo "Detected Steam OS / Steam Deck"
echo "Do you want to continue with installs?(yes/no)"
read input
if [ "$input" == "yes" ]; then

  # STEAM DECK ONLY
  sudo steamos-readonly disable
  sudo pacman-key --init
  sudo pacman-key --populate archlinux
  sudo pacman -Syu go tmux autossh sshuttle fzf powerline code mosh nodejs git base-devel npm httpie python-pip jre-openjdk php composer julia jdk-openjdk starship bat exa neofetch cmake unzip ninja tree-sitter curl yay-git htop wget gcc holo/linux-headers linux-neptune-headers holo/linux-lts-headersncat
  sudo pacman -Syu $(pacman -Qk 2>/dev/null | grep -ve ' 0 missing' | grep -ie ^libc -e glibc -e gcc -e clang -e headers -e udev -e systemd | awk -F ':' '{print $1}') --overwrite '*'

  # change shells
  chsh -s $(which zsh)

  # installs autojump
  ~/git/autojump/install.py

  # installs neovim
  git clone https://github.com/neovim/neovim ~/git/neovim
  cd ~/git/neovim
  make CMAKE_BUILD_TYPE=RelWithDebInfo
  sudo make install

  # installs rust
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

  cargo install navi --locked
fi

{{ end }}
