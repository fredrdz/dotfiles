#!/bin/zsh

# FZF Settings
export FZF_BASE="$HOME/.fzf"
DISABLE_FZF_AUTO_COMPLETION="false"
DISABLE_FZF_KEY_BINDINGS="false"

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
export SHELL="/bin/zsh"

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="fino-time"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="false"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  aws
  bun
  brew
  chezmoi
  colored-man-pages
  colorize
  copybuffer
  copypath
  copyfile
  docker
  fzf
  gcloud
  gh
  git
  git-auto-fetch
  golang
  httpie
  kubectl
  starship
  sudo
  tmux
  wp-cli
  zoxide
  zsh-autosuggestions
  zsh-interactive-cd
  zsh-syntax-highlighting
)

# You may need to manually set your language environment
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR="vim"
  export VISUAL="vim" 
else
  export EDITOR="nvim"
  export VISUAL="nvim" 
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# lua aliases
alias luamake=/usr/local/share/lua-language-server/3rd/luamake/compile/luamake

# ctag aliases
# make sure to install ctags first
# https://github.com/universal-ctags/ctags.git
alias ctags='/usr/local/bin/ctags'

# ls aliases
alias ls='ls --color=auto'
alias la='ls -A --color=auto'
alias l='ls -lhsF --color=auto --group-directories-first'
alias ll='ls -lAhsF --color=auto --group-directories-first'

# eza aliases
alias e='eza --icons --group-directories-first --color=always'
alias el='eza --oneline --icons --group-directories-first --color=always'
alias ela='eza --oneline --icons --group-directories-first --color=always --all'
alias es='eza --git --long --icons --group-directories-first --color=always --header'
alias esa='eza --git --long --icons --group-directories-first --color=always --header --all'
alias est='eza --git --long --tree --level 1 --icons --group-directories-first --color=always --header --all'

# diff alias
alias diff='riff'

# moar
export MOAR='--statusbar=bold -quit-if-one-screen -terminal-fg --no-linenumbers'
alias m='moar'

# bat
alias b='bat'
alias cat='bat --paging=never --style=plain'
alias -g -- -h='-h 2>&1 | bat --language=help --style=plain'
alias -g -- --help='--help 2>&1 | bat --language=help --style=plain'

# pagers
export PAGER='moar'

# nvim aliases
alias v='nvim'

# ssh aliases
alias ssh='TERM=xterm-256color ssh'

# docker aliases
alias docker-compose='docker compose'

# cargo apps updater
alias cargo-update="cargo install-update -a"

# go apps updater
alias go-update="go-global-update"

# keyboard firmware updater
alias kbupdate='
tempfile=$(mktemp --suffix=.bin) &&
if curl -o "$tempfile" https://oryx.zsa.io/RWBdx/latest/binary; then
    if wally-cli "$tempfile"; then
        rm -f "$tempfile"
    else
        echo "Error: wally-cli failed." >&2
        rm -f "$tempfile"
    fi
else
    echo "Error: Download failed." >&2
fi
'

# my public ip
alias myip="dig +short myip.opendns.com @resolver1.opendns.com | cat"

# ZSH Theme Color Scheme
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=#778899'

#
# zstyle Options
#

setopt COMPLETE_IN_WORD    # Complete from both ends of a word.
setopt ALWAYS_TO_END       # Move cursor to the end of a completed word.
setopt PATH_DIRS           # Perform path search even on command names with slashes.
setopt AUTO_MENU           # Show completion menu on a succesive tab press.
setopt AUTO_LIST           # Automatically list choices on ambiguous completion.
setopt AUTO_PARAM_SLASH    # If completed parameter is a directory, add a trailing slash.
unsetopt MENU_COMPLETE     # Do not autoselect the first completion entry.
unsetopt FLOW_CONTROL      # Disable start/stop characters in shell editor.

# Do menu-driven completion.
zstyle ':completion:*' menu select

# Use caching to make completion for cammands more usable.
zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

# Case-insensitive (all), partial-word, and then substring completion.
if zstyle -t ':prezto:module:completion:*' case-sensitive; then
  zstyle ':completion:*' matcher-list 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
  setopt CASE_GLOB
else
  zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
  unsetopt CASE_GLOB
fi

# Group matches and describe.
zstyle ':completion:*:*:*:*:*' menu select
zstyle ':completion:*:matches' group 'yes'
zstyle ':completion:*:options' description 'yes'
zstyle ':completion:*:options' auto-description '%d'
zstyle ':completion:*:corrections' format ' %F{green}-- %d (errors: %e) --%f'
zstyle ':completion:*:descriptions' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*:messages' format ' %F{purple} -- %d --%f'
zstyle ':completion:*:warnings' format ' %F{red}-- no matches found --%f'
zstyle ':completion:*:default' list-prompt '%S%M matches%s'
zstyle ':completion:*' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' verbose yes

# Fuzzy match mistyped completions.
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

# Increase the number of errors based on the length of the typed word.
zstyle -e ':completion:*:approximate:*' max-errors 'reply=($((($#PREFIX+$#SUFFIX)/3))numeric)'

# Don't complete unavailable commands.
zstyle ':completion:*:functions' ignored-patterns '(_*|pre(cmd|exec))'

# Array completion element sorting.
zstyle ':completion:*:*:-subscript-:*' tag-order indexes parameters

# Directories
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:*:cd:*' tag-order local-directories directory-stack path-directories
zstyle ':completion:*:*:cd:*:directory-stack' menu yes select
zstyle ':completion:*:-tilde-:*' group-order 'named-directories' 'path-directories' 'users' 'expand'
zstyle ':completion:*' squeeze-slashes true

# History
zstyle ':completion:*:history-words' stop yes
zstyle ':completion:*:history-words' remove-all-dups yes
zstyle ':completion:*:history-words' list false
zstyle ':completion:*:history-words' menu yes

# Populate hostname completion.
zstyle -e ':completion:*:hosts' hosts 'reply=(
  ${=${=${=${${(f)"$(cat {/etc/ssh_,~/.ssh/known_}hosts(|2)(N) 2>/dev/null)"}%%[#| ]*}//\]:[0-9]*/ }//,/ }//\[/ }
  ${=${(f)"$(cat /etc/hosts(|)(N) <<(ypcat hosts 2>/dev/null))"}%%\#*}
  ${=${${${${(@M)${(f)"$(cat ~/.ssh/config 2>/dev/null)"}:#Host *}#Host }:#*\**}:#*\?*}}
)'

# Don't complete uninteresting users...
zstyle ':completion:*:*:*:users' ignored-patterns \
  adm amanda apache avahi beaglidx bin cacti canna clamav daemon \
  dbus distcache dovecot fax ftp games gdm gkrellmd gopher \
  hacluster haldaemon halt hsqldb ident junkbust ldap lp mail \
  mailman mailnull mldonkey mysql nagios \
  named netdump news nfsnobody nobody nscd ntp nut nx openvpn \
  operator pcap postfix postgres privoxy pulse pvm quagga radvd \
  rpc rpcuser rpm shutdown squid sshd sync uucp vcsa xfs '_*'

# ... unless we really want to.
zstyle '*' single-ignored show

# Ignore multiple entries.
zstyle ':completion:*:(rm|kill|diff):*' ignore-line other
zstyle ':completion:*:rm:*' file-patterns '*:all-files'

# Kill
zstyle ':completion:*:*:*:*:processes' command 'ps -u $USER -o pid,user,comm -w'
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;36=0=01'
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:*:kill:*' force-list always
zstyle ':completion:*:*:kill:*' insert-ids single

# Man
zstyle ':completion:*:manuals' separate-sections true
zstyle ':completion:*:manuals.(^1*)' insert-sections true

# SSH/SCP/RSYNC
zstyle ':completion:*:(scp|rsync):*' tag-order 'hosts:-host:host hosts:-domain:domain hosts:-ipaddr:ip\ address *'
zstyle ':completion:*:(scp|rsync):*' group-order users files all-files hosts-domain hosts-host hosts-ipaddr
zstyle ':completion:*:ssh:*' tag-order 'hosts:-host:host hosts:-domain:domain hosts:-ipaddr:ip\ address *'
zstyle ':completion:*:ssh:*' group-order users hosts-domain hosts-host users hosts-ipaddr
zstyle ':completion:*:(ssh|scp|rsync):*:hosts-host' ignored-patterns '*(.|:)*' loopback ip6-loopback localhost ip6-localhost broadcasthost
zstyle ':completion:*:(ssh|scp|rsync):*:hosts-domain' ignored-patterns '<->.<->.<->.<->' '^[-[:alnum:]]##(.[-[:alnum:]]##)##' '*@*'
zstyle ':completion:*:(ssh|scp|rsync):*:hosts-ipaddr' ignored-patterns '^(<->.<->.<->.<->|(|::)([[:xdigit:].]##:(#c,2))##(|%*))' '127.0.0.<->' '255.255.255.255' '::1' 'fe80::*'

# fastfetch integration
fastfetch -c archey.jsonc

# vim-mode
#bindkey -v

# https://github.com/huboles/zshmux
# Auto-lists and connects to tmux sessions.
[[ -d "$HOME/git/zshmux" ]] && source "$HOME/git/zshmux/zshmux.zsh"

# DIR Colors
[[ -e "$HOME/.local/share/lscolors.sh" ]] && source "$HOME/.local/share/lscolors.sh"

# EXPORT PATH VARS
# add podman bin path
export PATH="/$HOME/.local/podman/bin:$PATH"

# additional bin paths
export PATH="/usr/local/sbin:$PATH"
export PATH="/$HOME/.local/bin:$PATH"

# Add go bin executables to PATH
export PATH=$PATH:$(go env GOPATH)/bin

# Setup go proxy
# export GOPROXY="https://proxy.golang.org,direct"

# tabtab source for packages
# uninstall by removing these lines
# (used for netlify completion; installed via NPM)
[[ -f ~/.config/tabtab/__tabtab.zsh ]] && . ~/.config/tabtab/__tabtab.zsh || true

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# enable completion
autoload -U compinit; compinit

# zsh chroma plugin settings
# https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/colorize
export ZSH_COLORIZE_TOOL="chroma"
export ZSH_COLORIZE_STYLE="gruvbox"
export ZSH_COLORIZE_CHROMA_FORMATTER="terminal16m"

# eza settings
export EZA_CONFIG_DIR="$HOME/.config/eza"
# disable LS_COLORS to use eza themes
export LS_COLORS=""

# ai
export ANTHROPIC_API_KEY={{ (bitwardenSecrets "8117fa18-bca8-42ce-bc53-b264004fad35").value }}
export OPENAI_API_KEY={{ (bitwardenSecrets "4a026d12-1f0b-494a-ad19-b0d10145db63").value }}

{{/*---------------------- WSL -----------------------*/}}
{{- if eq .chezmoi.os "linux" -}}
{{- if (.chezmoi.kernel.osrelease | lower | contains "microsoft") -}}
## WSL-specific code
## fixes issue with WSL2 while running systemd: https://github.com/microsoft/WSL/issues/8843#issuecomment-1480103001
# sudo sh -c 'echo :WSLInterop:M::MZ::/init:PF > /usr/lib/binfmt.d/WSLInterop.conf'
#
## bring in windows binaries for browsers
# ln -s "/mnt/c/Program Files/BraveSoftware/Brave-Browser/Application/brave.exe" ~/.local/bin/brave
# ln -s "/mnt/c/Program Files/Google/Chrome/Application/chrome.exe" ~/.local/bin/google-chrome
export PATH="$HOME/.local/bin/brave:$HOME/.local/bin/google-chrome:$PATH"
export BROWSER="$HOME/.local/bin/brave"
{{- end -}}
{{- end -}}

{{/*-------------------- Darwin ----------------------*/}}
{{- if eq .osid "darwin" -}}
#######################
# mac specific settings
#######################
defaults write -g NSWindowShouldDragOnGesture -bool true
defaults write -g NSAutomaticWindowAnimationsEnabled -bool false

# alias for golang du because of conflict w/ du
alias gdu="$(go env GOPATH)/bin/gdu"

# sdl2/dotnet vars
export DYLD_LIBRARY_PATH="/opt/homebrew/lib:$DYLD_LIBRARY_PATH"
export DOTNET_ROOT="/opt/homebrew/opt/dotnet/libexec"

# mono
export MONO_GAC_PREFIX="/opt/homebrew"

# use brew versions of bins
export PATH="/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/findutils/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/gnu-tar/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/gawk/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/gnu-indent/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/gnu-getopt/bin:$PATH"
export PATH="/opt/homebrew/opt/grep/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/libpq/bin:$PATH"
source "$(brew --prefix)/share/google-cloud-sdk/path.zsh.inc"
source "$(brew --prefix)/share/google-cloud-sdk/completion.zsh.inc"
export PATH="/usr/local/opt/llvm/bin:$PATH"
{{- end -}}

{{/*------------------- SteamOS ----------------------*/}}
{{- if eq .osid "linux-steamos" -}}
# alias
alias dbe='distrobox-enter fdev'
alias dbets='distrobox-enter fdev -- ts deck'
alias dbeta='distrobox-enter fdev -- ta deck'

# https://github.com/89luca89/distrobox/blob/107503a20bdb1e950fa05f329788e13c72f29342/docs/posts/install_rootless.md
# for distrobox gui apps; gives permissions
xhost +si:localuser:$USER
{{- end -}}

{{/*-------------------- Fedora ----------------------*/}}
{{- if eq .osid "linux-fedora" -}}
# runs cmd on host if not found in container
command_not_found_handle() {
  # don't run if not in a container
  if [ ! -e /run/.containerenv ] && [ ! -e /.dockerenv ]; then
    exit 127
  fi
  distrobox-host-exec "${@}"
}
if [ -n "${ZSH_VERSION-}" ]; then
  command_not_found_handler() {
    command_not_found_handle "$@"
 }
fi
{{- end -}}

{{/*-------------------- Nobara ----------------------*/}}
{{- if eq .osid "linux-nobara" -}}
alias update='nobara-sync cli'
alias update-extra='sudo dnf update rpmfusion-nonfree-release rpmfusion-free-release fedora-repos nobara-repos --refresh && sudo dnf distro-sync --refresh && sudo dnf update --refresh'
{{- end -}}
